name: deploy

on:
  workflow_call:
    inputs:
      STAGE:
        required: true
        type: string
      AWS_API_URI:
        required: true
        type: string
      GOOGLE_BOOK_API_URL:
        required: true
        type: string
      COVERS_BUCKET_NAME:
        required: true
        type: string
      COVERS_PLACEHOLDER_BUCKET_KEY:
        required: true
        type: string
    secrets:
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true
      COUCH_DB_URL:
        required: true
      CONTACT_TO_ADDRESS:
        required: true
      FIREBASE_CONFIG:
        required: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js environment
        uses: actions/setup-node@v4
        with:
          node-version: "18.x"
          registry-url: "https://registry.npmjs.org"
      - run: npm ci
      - run: npm run build:api --verbose
      # - run: npm run install-sharp-lambda
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Prepare build environment
        run: |
          touch packages/api/.env
          echo "FIREBASE_CONFIG=${{secrets.FIREBASE_CONFIG}}" >> packages/api/.env
          echo "CONTACT_TO_ADDRESS=${{secrets.CONTACT_TO_ADDRESS}}" >> packages/api/.env
          echo "COUCH_DB_URL=${{secrets.COUCH_DB_URL}}" >> packages/api/.env
          echo "AWS_API_URI=${{inputs.AWS_API_URI}}" >> packages/api/.env
          echo "GOOGLE_BOOK_API_URL=${{inputs.GOOGLE_BOOK_API_URL}}" >> packages/api/.env
          echo "COVERS_BUCKET_NAME=${{inputs.COVERS_BUCKET_NAME}}" >> packages/api/.env
          echo "COVERS_PLACEHOLDER_BUCKET_KEY=${{inputs.COVERS_PLACEHOLDER_BUCKET_KEY}}" >> packages/api/.env
          echo "OFFLINE=false" >> packages/api/.env
      - name: Deploy
        run: npx lerna exec --scope @oboku/api -- sls deploy --stage ${{ inputs.STAGE }}
