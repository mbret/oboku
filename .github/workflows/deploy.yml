name: Build, test and deploy

on:
  push:
    branches: [develop, master]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    outputs:
      status: ${{ steps.build-status.outputs.status }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: Check
        run: |
          npm ci
          npm run lint
          npm run test
          npm run build

      - name: Get branch name
        id: branch-name
        run: echo "branch=${GITHUB_REF#refs/heads/}" >> $GITHUB_OUTPUT

      - name: Save build status
        id: build-status
        run: echo "status=success" >> $GITHUB_OUTPUT

  deploy-to-dev:
    needs: build-and-test
    if: github.ref == 'refs/heads/develop' && needs.build-and-test.outputs.status == 'success'
    runs-on: ubuntu-latest
    steps:
      - name: Noop
        run: echo "Noop"

  deploy-to-prod:
    needs: build-and-test
    if: github.ref == 'refs/heads/master' && needs.build-and-test.outputs.status == 'success'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push API
        uses: docker/build-push-action@v6
        with:
          context: ./
          target: api
          push: true
          tags: mbret/oboku-api:latest
