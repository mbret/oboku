services:
  couchdb:
    image: couchdb:latest
    restart: always
    ports:
      - "5984:5984"
    environment:
      - COUCHDB_USER=${COUCHDB_USER}
      - COUCHDB_PASSWORD=${COUCHDB_PASSWORD}
    volumes:
      - oboku-couchdb:/opt/couchdb/data

  postgres:
    image: postgres
    restart: always
    environment:
      POSTGRES_DB: oboku
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - oboku-postgres:/var/lib/postgresql/data

  web:
    build:
      context: ./
      dockerfile: dockerfile
      target: web
    restart: always
    ports:
      - "80:80"

  api:
    build:
      context: ./
      dockerfile: dockerfile
      target: api
    restart: always
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - COUCH_DB_URL=${COUCH_DB_URL}
      - COVERS_BUCKET_NAME=${COVERS_BUCKET_NAME}
      - COVERS_PLACEHOLDER_BUCKET_KEY=${COVERS_PLACEHOLDER_BUCKET_KEY}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - COUCHDB_USER=${COUCHDB_USER}
      - COUCHDB_PASSWORD=${COUCHDB_PASSWORD}
      - SENTRY_DSN=${SENTRY_DSN}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      # will connect through the postgres service name docker bridge network
      - POSTGRES_HOST=postgres

volumes:
  oboku-postgres:
  oboku-couchdb:
