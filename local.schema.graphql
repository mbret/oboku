type FirstTimeExperience {
  hasDoneWelcomeTour: Boolean
  hasDoneReaderTour: Boolean
}

enum DownloadState {
  none
  downloaded
  downloading
}

extend type Book {
  downloadState: DownloadState
  downloadProgress: Float
}

extend type User {
  isLibraryUnlocked: Boolean!
  token: String
  isAuthenticated: Boolean!
}

extend type SyncQueryResponse {
  happening: Boolean!
}

type App {
  id: ID!
  hasUpdateAvailable: Boolean!
}

type Query {
  app: App
  firstTimeExperience: FirstTimeExperience
  collections(foo: String): [Collection]
  books(isProtected: Boolean): [Book]
  user: User
}

type OfflineResponse {
  success: Boolean
}

type Mutation {
  app(hasUpdateAvailable: Boolean): App
  logout: OfflineResponse
}